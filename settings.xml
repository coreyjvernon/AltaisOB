<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7235f509-8f4a-474c-bc25-478760adfdcd" created="3.5.1" activeEnvironment="Default environment" name="SwaggerHub Project 2" resourceRoot="" compositeProjectFormat="1.3" updated="3.5.1" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadUITestRunnerUIAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="" value=""/>
  <con:entry key="Local Mode" value="false"/>
  <con:entry key="SelectedStatistics" value=""/>
  <con:entry key="Target Number Limit" value=""/>
  <con:entry key="Group results" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Create Reports" value="true"/>
  <con:entry key="Test Duration Limit" value=""/>
  <con:entry key="Abort Requests" value=""/>
  <con:entry key="Report Format" value="Default"/>
  <con:entry key="Agents" value=""/>
  <con:entry key="JUnit-Style Results" value="false"/>
  <con:entry key="Arriving/Base VUs" value=""/>
  <con:entry key="Statistics" value=""/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Failure Limit" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Project password" value=""/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="ExportStatistics" value="New Statistics Group;;New Statistics Group 1;;"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="LoadUITest" value="Load Test 1"/>
</xml-fragment>]]></con:setting>
    <con:setting id="7235f509-8f4a-474c-bc25-478760adfdcdfileName">SwaggerHub-Project-2</con:setting>
  </con:settings>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting/>
  <con:reporting/>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
